<Window x:Class="Waf.FileHashGenerator.Presentation.Views.ShellWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:p="clr-namespace:Waf.FileHashGenerator.Presentation.Properties"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:dd="clr-namespace:Waf.FileHashGenerator.Presentation.DesignData"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
        mc:Ignorable="d" Title="{Binding Title}" Icon="{StaticResource FileHashGeneratorIcon}" MinWidth="200" MinHeight="120" Width="640" Height="440"
        d:DataContext="{d:DesignInstance dd:SampleShellViewModel, IsDesignTimeCreatable=True}">
    
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>
    
    <Window.InputBindings>
        <KeyBinding Command="{Binding OpenCommand}" Key="O" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding AboutCommand}" Key="F1"/>
    </Window.InputBindings>
    
    <DockPanel>
        <ToolBar DockPanel.Dock="Top">
            <ToolBar.Resources>
                <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
                    <Setter Property="Height" Value="38"/>
                    <Setter Property="MinWidth" Value="55"/>
                    <Setter Property="Padding" Value="5,0,5,0"/>
                </Style>
                <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="ToggleButton">
                    <Setter Property="Height" Value="38"/>
                    <Setter Property="MinWidth" Value="55"/>
                    <Setter Property="Padding" Value="5,0,5,0"/>
                </Style>
            </ToolBar.Resources>

            <Button Command="{Binding OpenCommand}" ToolTip="{x:Static p:Resources.OpenToolTip}">
                <AccessText Text="{x:Static p:Resources.OpenMenu}"/>
            </Button>
            <Separator/>
            <Button Command="{Binding SelectSha512Command}" ToolTip="{x:Static p:Resources.Sha512ToolTip}" FontWeight="{Binding HashMode, Converter={StaticResource EnumToFontWeightConverter}, ConverterParameter=Sha512}">
                <AccessText Text="{x:Static p:Resources.Sha512Menu}"/>
            </Button>
            <Button Command="{Binding SelectSha256Command}" ToolTip="{x:Static p:Resources.Sha256ToolTip}" FontWeight="{Binding HashMode, Converter={StaticResource EnumToFontWeightConverter}, ConverterParameter=Sha256}">
                <AccessText Text="{x:Static p:Resources.Sha256Menu}"/>
            </Button>
            <Button Command="{Binding SelectSha1Command}" ToolTip="{x:Static p:Resources.Sha1ToolTip}" FontWeight="{Binding HashMode, Converter={StaticResource EnumToFontWeightConverter}, ConverterParameter=Sha1}">
                <AccessText Text="{x:Static p:Resources.Sha1Menu}"/>
            </Button>
            <Button Command="{Binding SelectMD5Command}" ToolTip="{x:Static p:Resources.MD5ToolTip}" FontWeight="{Binding HashMode, Converter={StaticResource EnumToFontWeightConverter}, ConverterParameter=MD5}">
                <AccessText Text="{x:Static p:Resources.MD5Menu}"/>
            </Button>
            <Separator/>
            <Button Command="ApplicationCommands.Copy" ToolTip="{x:Static p:Resources.CopyToolTip}">
                <AccessText Text="{x:Static p:Resources.CopyMenu}"/>
            </Button>
            <Button Command="ApplicationCommands.Paste" ToolTip="{x:Static p:Resources.PasteToolTip}">
                <AccessText Text="{x:Static p:Resources.PasteMenu}"/>
            </Button>
            <ToggleButton x:Name="viewButton" ToolTip="{x:Static p:Resources.ViewToolTip}">
                <AccessText Text="{x:Static p:Resources.ViewMenu}"/>
            </ToggleButton>
            <Button Command="{Binding AboutCommand}" ToolTip="{x:Static p:Resources.AboutToolTip}">
                <AccessText Text="{x:Static p:Resources.AboutMenu}"/>
            </Button>
        </ToolBar>

        <Popup x:Name="viewPopup" IsOpen="{Binding IsChecked, ElementName=viewButton}" PlacementTarget="{Binding ElementName=viewButton}" Placement="Bottom" StaysOpen="False" Opened="ViewPopupOpened" KeyUp="ViewPopupKeyUp">
            <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                <StackPanel Width="200" Margin="0,0,11,11">
                    <Label Content="{x:Static p:Resources.Formatting}" Margin="6,11,0,0"/>
                    <RadioButton x:Name="hexadecimalButton" IsChecked="{Binding IsHexadecimalFormatting}" Content="{x:Static p:Resources.Hexadecimal}"/>
                    <RadioButton IsChecked="{Binding IsBase64Formatting}" Content="{x:Static p:Resources.Base64Encoding}"/>
                </StackPanel>
            </Border>
        </Popup>

        <ContentPresenter Content="{Binding ContentView}"/>
    </DockPanel>
</Window>
