<UserControl x:Class="Waf.FileHashGenerator.Presentation.Views.FileHashListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:p="clr-namespace:Waf.FileHashGenerator.Presentation.Properties"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dd="clr-namespace:Waf.FileHashGenerator.Presentation.DesignData"
             x:Name="fileHashListView"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="600"
             d:DataContext="{d:DesignInstance dd:SampleFileHashListViewModel, IsDesignTimeCreatable=True}">
    <ScrollViewer AllowDrop="True">
        <Grid>
            <ItemsControl ItemsSource="{Binding FileHashItems}" Focusable="False">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="1" Margin="3">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHashValid}" Value="True">
                                            <Setter Property="BorderBrush" Value="Green"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHashValid}" Value="False">
                                            <Setter Property="BorderBrush" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                                </Style>
                            </Border.Style>
                            
                            <Grid Margin="0,0,16,11">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Label Content="{Binding FileName, Converter={StaticResource FileNameConverter}}" FontWeight="SemiBold" Grid.ColumnSpan="2"/>
                                <Button Command="{Binding DataContext.CloseCommand, ElementName=fileHashListView}" CommandParameter="{Binding}" 
                                        Content="{StaticResource CloseSmallImage}" ToolTip="{x:Static p:Resources.CloseFile}" Grid.Column="1" HorizontalAlignment="Right" Padding="5"
                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>

                                <Label Grid.ColumnSpan="2" Grid.Row="1"  Margin="11,0,0,11">
                                    <TextBlock Text="{Binding FileName, Converter={StaticResource DirectoryNameConverter}}" TextTrimming="CharacterEllipsis" />
                                </Label>

                                <Label Content="{Binding DataContext.HashHeader, ElementName=fileHashListView}" ContentStringFormat="{x:Static p:Resources.HashHeader}" Grid.Row="2"/>
                                <TextBox Text="{Binding Hash}" IsReadOnly="True" Grid.Column="1" Grid.Row="2">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Hash}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <ProgressBar Value="{Binding Progress}" Maximum="1" Grid.Column="1" Grid.Row="2">
                                    <ProgressBar.Style>
                                        <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Hash}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>

                                <Label Content="{x:Static p:Resources.ExpectedMenu}" Target="{Binding ElementName=expectedHashBox}" Grid.Row="3"/>
                                <TextBox x:Name="expectedHashBox" Text="{Binding ExpectedHash, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="3"/>

                                <Image Source="{Binding IsHashValid, Converter={StaticResource IsHashValidToImageSourceConverter}}" Stretch="None" Margin="16,11,0,0" HorizontalAlignment="Left" Grid.Row="4"/>
                                <Label Padding="0,5" Grid.Column="1" Grid.Row="4">
                                    <TextBlock Text="{Binding IsHashValid, Converter={StaticResource IsHashValidToTextConverter}}" TextWrapping="Wrap" />
                                </Label>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Border BorderBrush="{StaticResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1" Margin="3"
                    VerticalAlignment="Top">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FileHashItems.Count}" Value="0">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <StackPanel Margin="0,0,11,55">
                    <Label Content="{Binding DataContext.HashHeader, ElementName=fileHashListView}" ContentStringFormat="{x:Static p:Resources.HashModeHeader}" FontWeight="SemiBold"/>
                    <Label>
                        <TextBlock Text="{Binding DataContext.HashHeader, ElementName=fileHashListView, StringFormat={x:Static p:Resources.GenerateHashInstruction}}" TextWrapping="Wrap"/>
                    </Label>
                </StackPanel>
            </Border>
        </Grid>
    </ScrollViewer>
</UserControl>
